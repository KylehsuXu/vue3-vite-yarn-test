{"version":3,"file":"radio-button.vue_vue&type=script&lang.js","sources":["../../../../../../packages/components/radio/src/radio-button.vue"],"sourcesContent":["<template>\n  <label\n    class=\"el-radio-button\"\n    :class=\"[\n      size ? 'el-radio-button--' + size : '',\n      {\n        'is-active': value === label,\n        'is-disabled': isDisabled,\n        'is-focus': focus,\n      },\n    ]\"\n    role=\"radio\"\n    :aria-checked=\"value === label\"\n    :aria-disabled=\"isDisabled\"\n    :tabindex=\"tabIndex\"\n    @keydown.space.stop.prevent=\"value = isDisabled ? value : label\"\n  >\n    <input\n      ref=\"radioRef\"\n      v-model=\"value\"\n      class=\"el-radio-button__original-radio\"\n      :value=\"label\"\n      type=\"radio\"\n      :name=\"name\"\n      :disabled=\"isDisabled\"\n      tabindex=\"-1\"\n      @focus=\"focus = true\"\n      @blur=\"focus = false\"\n    />\n    <span\n      class=\"el-radio-button__inner\"\n      :style=\"value === label ? activeStyle : null\"\n      @keydown.stop\n    >\n      <slot>\n        {{ label }}\n      </slot>\n    </span>\n  </label>\n</template>\n<script lang=\"ts\">\nimport { computed, defineComponent, ref } from 'vue'\nimport { useRadio, useRadioAttrs } from './useRadio'\n\nexport default defineComponent({\n  name: 'ElRadioButton',\n\n  props: {\n    label: {\n      type: [String, Number, Boolean],\n      default: '',\n    },\n    disabled: Boolean,\n    name: {\n      type: String,\n      default: '',\n    },\n  },\n  setup(props) {\n    const { isGroup, radioGroup, elFormItemSize, ELEMENT, focus, elForm } =\n      useRadio()\n\n    const size = computed(() => {\n      return radioGroup.radioGroupSize || elFormItemSize.value || ELEMENT.size\n    })\n\n    const radioRef = ref<HTMLInputElement>()\n\n    const value = computed<boolean | string | number>({\n      get() {\n        return radioGroup.modelValue\n      },\n      set(value) {\n        radioGroup.changeEvent(value)\n\n        radioRef.value.checked = radioGroup.modelValue === props.label\n      },\n    })\n\n    const { isDisabled, tabIndex } = useRadioAttrs(props, {\n      model: value,\n      elForm,\n      radioGroup,\n      isGroup,\n    })\n\n    const activeStyle = computed(() => {\n      return {\n        backgroundColor: radioGroup.fill || '',\n        borderColor: radioGroup.fill || '',\n        boxShadow: radioGroup.fill ? `-1px 0 0 0 ${radioGroup.fill}` : '',\n        color: radioGroup.textColor || '',\n      }\n    })\n\n    return {\n      isGroup,\n      size,\n      isDisabled,\n      tabIndex,\n      value,\n      focus,\n      activeStyle,\n      radioRef,\n    }\n  },\n})\n</script>\n"],"names":["defineComponent","useRadio","computed","ref","useRadioAttrs"],"mappings":";;;;;;;AA4CA,aAAeA,oBAAgB;AAAA,EAC7B,MAAM;AAAA,EAEN,OAAO;AAAA,IACL,OAAO;AAAA,MACL,MAAM,CAAC,QAAQ,QAAQ;AAAA,MACvB,SAAS;AAAA;AAAA,IAEX,UAAU;AAAA,IACV,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS;AAAA;AAAA;AAAA,EAGb,MAAM,OAAO;AACX,UAAM,EAAE,SAAS,YAAY,gBAAgB,SAAS,OAAO,WAC3DC;AAEF,UAAM,OAAOC,aAAS,MAAM;AAC1B,aAAO,WAAW,kBAAkB,eAAe,SAAS,QAAQ;AAAA;AAGtE,UAAM,WAAWC;AAEjB,UAAM,QAAQD,aAAoC;AAAA,MAChD,MAAM;AACJ,eAAO,WAAW;AAAA;AAAA,MAEpB,IAAI,QAAO;AACT,mBAAW,YAAY;AAEvB,iBAAS,MAAM,UAAU,WAAW,eAAe,MAAM;AAAA;AAAA;AAI7D,UAAM,EAAE,YAAY,aAAaE,uBAAc,OAAO;AAAA,MACpD,OAAO;AAAA,MACP;AAAA,MACA;AAAA,MACA;AAAA;AAGF,UAAM,cAAcF,aAAS,MAAM;AACjC,aAAO;AAAA,QACL,iBAAiB,WAAW,QAAQ;AAAA,QACpC,aAAa,WAAW,QAAQ;AAAA,QAChC,WAAW,WAAW,OAAO,cAAc,WAAW,SAAS;AAAA,QAC/D,OAAO,WAAW,aAAa;AAAA;AAAA;AAInC,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA;AAAA;;;;"}