{"version":3,"file":"index.vue_vue&type=template&id=4e01dfba&lang.mjs","sources":["../../../../../../packages/components/result/src/index.vue?vue&type=template&id=4e01dfba&lang.js"],"sourcesContent":["<template>\n  <div class=\"el-result\">\n    <div class=\"el-result__icon\">\n      <slot name=\"icon\">\n        <component :is=\"resultIcon.component\" :class=\"resultIcon.class\" />\n      </slot>\n    </div>\n    <div v-if=\"title || $slots.title\" class=\"el-result__title\">\n      <slot name=\"title\">\n        <p>{{ title }}</p>\n      </slot>\n    </div>\n    <div v-if=\"subTitle || $slots.subTitle\" class=\"el-result__subtitle\">\n      <slot name=\"subTitle\">\n        <p>{{ subTitle }}</p>\n      </slot>\n    </div>\n    <div v-if=\"$slots.extra\" class=\"el-result__extra\">\n      <slot name=\"extra\"></slot>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport {\n  WarningFilled,\n  CircleCheckFilled,\n  CircleCloseFilled,\n  InfoFilled,\n} from '@element-plus/icons'\n\nimport type { Component } from 'vue'\nimport type { Indexable } from '@element-plus/utils/types'\n\nconst IconMap: Indexable<string> = {\n  success: 'icon-success',\n  warning: 'icon-warning',\n  error: 'icon-error',\n  info: 'icon-info',\n}\n\nconst IconComponentMap: Indexable<Component> = {\n  [IconMap.success]: CircleCheckFilled,\n  [IconMap.warning]: WarningFilled,\n  [IconMap.error]: CircleCloseFilled,\n  [IconMap.info]: InfoFilled,\n}\n\nexport default defineComponent({\n  name: 'ElResult',\n  props: {\n    title: {\n      type: String,\n      default: '',\n    },\n    subTitle: {\n      type: String,\n      default: '',\n    },\n    icon: {\n      type: String,\n      default: 'info',\n    },\n  },\n  setup(props) {\n    const resultIcon = computed(() => {\n      const icon = props.icon\n      const iconClass = icon && IconMap[icon] ? IconMap[icon] : 'icon-info'\n      const iconComponent =\n        IconComponentMap[iconClass] || IconComponentMap['icon-info']\n\n      return {\n        class: iconClass,\n        component: iconComponent,\n      }\n    })\n\n    return {\n      resultIcon,\n    }\n  },\n})\n</script>\n"],"names":["_createElementBlock","_createElementVNode","_renderSlot","_createBlock"],"mappings":";;qBACO,OAAM;qBACJ,OAAM;;;EAKuB,OAAM;AAAA;;;EAKA,OAAM;AAAA;;;EAKrB,OAAM;AAAA;;sBAhBjCA,0BAAA;IACEC,0BAAA;MACEC,oCAAA;sBACEC,oCAAgB,gBAAW;UAAY,sBAAO,gBAAW;AAAA;;;IAGlD,cAAS,YAAO,sBAA3BH,0BAAA;MACEE,qCAAA;QACED,8CAAM;;;IAGC,iBAAY,YAAO,yBAA9BD,0BAAA;MACEE,wCAAA;QACED,8CAAM;;;IAGC,YAAO,sBAAlBD,0BAAA;MACEE;;;;;;;"}