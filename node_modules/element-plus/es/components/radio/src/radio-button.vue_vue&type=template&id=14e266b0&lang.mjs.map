{"version":3,"file":"radio-button.vue_vue&type=template&id=14e266b0&lang.mjs","sources":["../../../../../../packages/components/radio/src/radio-button.vue?vue&type=template&id=14e266b0&lang.js"],"sourcesContent":["<template>\n  <label\n    class=\"el-radio-button\"\n    :class=\"[\n      size ? 'el-radio-button--' + size : '',\n      {\n        'is-active': value === label,\n        'is-disabled': isDisabled,\n        'is-focus': focus,\n      },\n    ]\"\n    role=\"radio\"\n    :aria-checked=\"value === label\"\n    :aria-disabled=\"isDisabled\"\n    :tabindex=\"tabIndex\"\n    @keydown.space.stop.prevent=\"value = isDisabled ? value : label\"\n  >\n    <input\n      ref=\"radioRef\"\n      v-model=\"value\"\n      class=\"el-radio-button__original-radio\"\n      :value=\"label\"\n      type=\"radio\"\n      :name=\"name\"\n      :disabled=\"isDisabled\"\n      tabindex=\"-1\"\n      @focus=\"focus = true\"\n      @blur=\"focus = false\"\n    />\n    <span\n      class=\"el-radio-button__inner\"\n      :style=\"value === label ? activeStyle : null\"\n      @keydown.stop\n    >\n      <slot>\n        {{ label }}\n      </slot>\n    </span>\n  </label>\n</template>\n<script lang=\"ts\">\nimport { computed, defineComponent, ref } from 'vue'\nimport { useRadio, useRadioAttrs } from './useRadio'\n\nexport default defineComponent({\n  name: 'ElRadioButton',\n\n  props: {\n    label: {\n      type: [String, Number, Boolean],\n      default: '',\n    },\n    disabled: Boolean,\n    name: {\n      type: String,\n      default: '',\n    },\n  },\n  setup(props) {\n    const { isGroup, radioGroup, elFormItemSize, ELEMENT, focus, elForm } =\n      useRadio()\n\n    const size = computed(() => {\n      return radioGroup.radioGroupSize || elFormItemSize.value || ELEMENT.size\n    })\n\n    const radioRef = ref<HTMLInputElement>()\n\n    const value = computed<boolean | string | number>({\n      get() {\n        return radioGroup.modelValue\n      },\n      set(value) {\n        radioGroup.changeEvent(value)\n\n        radioRef.value.checked = radioGroup.modelValue === props.label\n      },\n    })\n\n    const { isDisabled, tabIndex } = useRadioAttrs(props, {\n      model: value,\n      elForm,\n      radioGroup,\n      isGroup,\n    })\n\n    const activeStyle = computed(() => {\n      return {\n        backgroundColor: radioGroup.fill || '',\n        borderColor: radioGroup.fill || '',\n        boxShadow: radioGroup.fill ? `-1px 0 0 0 ${radioGroup.fill}` : '',\n        color: radioGroup.textColor || '',\n      }\n    })\n\n    return {\n      isGroup,\n      size,\n      isDisabled,\n      tabIndex,\n      value,\n      focus,\n      activeStyle,\n      radioRef,\n    }\n  },\n})\n</script>\n"],"names":["_createElementBlock","_createElementVNode","_renderSlot"],"mappings":";;;;;sBACEA;IACE,uBAAM;;;;;;;;IASN,MAAK;AAAA,IACJ,gBAAc,eAAU;IACxB,iBAAe;IACf,UAAU;IACV,wEAA4B,aAAQ,kBAAa,aAAQ;;mBAE1DC;MACE,KAAI;AAAA,mEACK;MACT,OAAM;AAAA,MACL,OAAO;MACR,MAAK;AAAA,MACJ,MAAM;MACN,UAAU;MACX,UAAS;AAAA,MACR,+CAAO;MACP,8CAAM;;oBARE;;IAUXA;MACE,OAAM;AAAA,MACL,sBAAO,eAAU,aAAQ;MACzB,mDAAD;;;MAEAC,uCAAA;wCACK;;;;;;;;"}